[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gama-gymnasium"
version = "0.1.0"
description = "Integration between GAMA simulations and OpenAI Gymnasium"
readme = "README.md"
license = "MIT"
authors = [
    { name = "GAMA Platform Team", email = "contact@gama-platform.org" }
]
maintainers = [
    { name = "GAMA Platform Team", email = "contact@gama-platform.org" }
]
keywords = [
    "gama",
    "gymnasium", 
    "reinforcement-learning",
    "agent-based-modeling",
    "simulation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "gymnasium>=0.29.0",
    "numpy>=1.21.0",
    "gama-client>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "psutil>=5.9.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
examples = [
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
    "stable-baselines3>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/gama-platform/gama-gymnasium"
Documentation = "https://gama-gymnasium.readthedocs.io"
Repository = "https://github.com/gama-platform/gama-gymnasium"
Issues = "https://github.com/gama-platform/gama-gymnasium/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/gama_gymnasium"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gama_gymnasium"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=gama_gymnasium",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml"
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "performance: marks tests as performance tests (deselect with '-m \"not performance\"')", 
    "benchmark: marks tests as benchmark tests (deselect with '-m \"not benchmark\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
